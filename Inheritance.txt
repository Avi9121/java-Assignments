1. Develop programs to demonstrate single,multiple and hierarchical inheritance ?


-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--> Single  Iheritance


public class SingleParentClassinheritance {
	int a =44;
	int b=50;
	
	
	 public void add(int x ,int y) {
	        int a = x;
	        int b = y;
	        int c = a + b;
	        System.out.println("addition is " + c);
	 }
public class SingleChildClassinheritance extends SingleParentClassinheritance  {
	 
	
	 static void multiple(int a,int b) {
		 int z=a*b;
		 
		  System.out.println("Multiplication is "+z);
	   }
	   public static void main(String args[]){
		   SingleParentClassinheritance obj = new SingleParentClassinheritance();
	     obj.add(30,40); 
	     multiple(5,6); 
	  }

}
}

OutPut: addition is 70
        Multiplication is 30
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--> Multiple Inheritance :



public class ParentClassMultilevelInheritance {
	
	
	 public void add(int x ,int y) {
	       
	        int c = x + y;
	        System.out.println("addition is " + c);
	 }


}
public class ChildClassMultilevelInheritance extends ParentClassMultilevelInheritance {
	int a =44;
	int b=50;
	
	
	 public void Multiplication(int a ,int b) {
	       
	        int c = a*b;
	        System.out.println("Multiplication  is " + c);
	 }


}
public class GrandChildClassMultilevelInheritance extends ChildClassMultilevelInheritance{
	int a =44;
	int b=50;
	
	
	 public void Devision(int m ,int n) {
	        int c = m/n;
	        
	        System.out.println("Devision  is " + c);
	 }
	 public static void main(String[] args) {
		 GrandChildClassMultilevelInheritance  obj=new GrandChildClassMultilevelInheritance();
		 obj.add(23,55);
		 obj.Multiplication(2,4);
		 obj.Devision(40,2);
		 
		
	}


}


OutPut:   addition is 78
          Multiplication  is 8
          Devision  is 20
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-->Hierarchical inheritance 

public class HierarchicalGrandParentClass {
	 public void MethodPG()
	   {
	      System.out.println("Hierarchical GrandParent Class");
	   }

}
public class HierarchicalParentClass extends HierarchicalGrandParentClass {
	public void HierarchicalParentClass()
	   {
	      System.out.println("Hierarchical  Parent Class ");
	   }

	

}
public class HierarchicalhildClass extends HierarchicalGrandParentClass{
	
	public void HierarchicalhildClass()
	   {
	      System.out.println("Hierarchical  Child Class ");
	   }

}
public class HierarchicalGrandChildClass extends HierarchicalGrandParentClass {
	
	public void HierarchicalGrandChildClass()
	   {
	      System.out.println("Hierarchical  Grand Child  Class ");
	   }

}
public class Hierarchical {
	public static void main(String[] args) {
		
		
		
		HierarchicalParentClass obj1   = new HierarchicalParentClass();
		HierarchicalhildClass obj2      = new HierarchicalhildClass();
		HierarchicalGrandChildClass obj3 =new HierarchicalGrandChildClass();
	      
		obj1.HierarchicalParentClass();
	     obj2.HierarchicalhildClass();
	     obj3.HierarchicalGrandChildClass();
		
		
	}

}

-->Output:  Hierarchical  Parent Class 
            Hierarchical  Child Class 
            Hierarchical  Grand Child  Class 




